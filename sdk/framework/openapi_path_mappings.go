package framework

type knownPathKey struct {
	mount string
	path  string
}

type knownPathValue struct {
	name             string
	operationImplied bool // if true, operation will not be appended to the resulting name
}

// When constructing a request or response name from a mount + path, certain
// paths result in very long names or names with duplicate parts. For such paths,
// we use custom path mappings instead to generate request/response names.
var knownPathMappings = map[knownPathKey]knownPathValue{
	{mount: "auth/alicloud", path: "login"}:                                            {name: "AliCloudLogin", operationImplied: true},
	{mount: "auth/alicloud", path: "role"}:                                             {name: "AliCloudAuthRoles"},
	{mount: "auth/alicloud", path: "role/{role}"}:                                      {name: "AliCloudAuthRole"},
	{mount: "auth/alicloud", path: "roles"}:                                            {name: "AliCloudAuthRoles2"},
	{mount: "auth/approle", path: "login"}:                                             {name: "AppRoleLogin", operationImplied: true},
	{mount: "auth/approle", path: "role"}:                                              {name: "AppRoleRoles"},
	{mount: "auth/approle", path: "role/{role_name}"}:                                  {name: "AppRoleRole"},
	{mount: "auth/approle", path: "role/{role_name}/bind-secret-id"}:                   {name: "AppRoleBindSecretID"},
	{mount: "auth/approle", path: "role/{role_name}/bound-cidr-list"}:                  {name: "AppRoleBoundCIDRList"},
	{mount: "auth/approle", path: "role/{role_name}/custom-secret-id"}:                 {name: "AppRoleCustomSecretID"},
	{mount: "auth/approle", path: "role/{role_name}/local-secret-ids"}:                 {name: "AppRoleLocalSecretIDs"},
	{mount: "auth/approle", path: "role/{role_name}/period"}:                           {name: "AppRolePeriod"},
	{mount: "auth/approle", path: "role/{role_name}/policies"}:                         {name: "AppRolePolicies"},
	{mount: "auth/approle", path: "role/{role_name}/role-id"}:                          {name: "AppRoleRoleID"},
	{mount: "auth/approle", path: "role/{role_name}/secret-id"}:                        {name: "AppRoleSecretID"},
	{mount: "auth/approle", path: "role/{role_name}/secret-id-accessor/destroy"}:       {name: "AppRoleSecretIDAccessorDestroy"},
	{mount: "auth/approle", path: "role/{role_name}/secret-id-accessor/lookup"}:        {name: "AppRoleSecretIDAccessorLookup"},
	{mount: "auth/approle", path: "role/{role_name}/secret-id-bound-cidrs"}:            {name: "AppRoleSecretIDBoundCIDRs"},
	{mount: "auth/approle", path: "role/{role_name}/secret-id-num-uses"}:               {name: "AppRoleSecretIDNumberOfUses"},
	{mount: "auth/approle", path: "role/{role_name}/secret-id-ttl"}:                    {name: "AppRoleSecretIDTTL"},
	{mount: "auth/approle", path: "role/{role_name}/secret-id/destroy"}:                {name: "AppRoleSecretIDDestroy"},
	{mount: "auth/approle", path: "role/{role_name}/secret-id/lookup"}:                 {name: "AppRoleSecretIDLookup"},
	{mount: "auth/approle", path: "role/{role_name}/token-bound-cidrs"}:                {name: "AppRoleTokenBoundCIDRs"},
	{mount: "auth/approle", path: "role/{role_name}/token-max-ttl"}:                    {name: "AppRoleTokenMaxTTL"},
	{mount: "auth/approle", path: "role/{role_name}/token-num-uses"}:                   {name: "AppRoleTokenNumberOfUses"},
	{mount: "auth/approle", path: "role/{role_name}/token-ttl"}:                        {name: "AppRoleTokenTTL"},
	{mount: "auth/approle", path: "tidy/secret-id"}:                                    {name: "AppRoleTidySecretID"},
	{mount: "auth/aws", path: "config/certificate/{cert_name}"}:                        {name: "AWSConfigCertificate"},
	{mount: "auth/aws", path: "config/certificates"}:                                   {name: "AWSConfigCertificates"},
	{mount: "auth/aws", path: "config/client"}:                                         {name: "AWSConfigClient"},
	{mount: "auth/aws", path: "config/identity"}:                                       {name: "AWSConfigIdentity"},
	{mount: "auth/aws", path: "config/rotate-root"}:                                    {name: "AWSConfigRotateRoot"},
	{mount: "auth/aws", path: "config/sts"}:                                            {name: "AWSConfigSecurityTokenService"},
	{mount: "auth/aws", path: "config/sts/{account_id}"}:                               {name: "AWSConfigSecurityTokenServiceAccount"},
	{mount: "auth/aws", path: "config/tidy/identity-accesslist"}:                       {name: "AWSConfigTidyIdentityAccesslist"},
	{mount: "auth/aws", path: "config/tidy/identity-whitelist"}:                        {name: "AWSConfigTidyIdentityWhitelist"},
	{mount: "auth/aws", path: "config/tidy/roletag-blacklist"}:                         {name: "AWSConfigTidyRoleTagBlacklist"},
	{mount: "auth/aws", path: "config/tidy/roletag-denylist"}:                          {name: "AWSConfigTidyRoleTagDenylist"},
	{mount: "auth/aws", path: "identity-accesslist"}:                                   {name: "AWSIdentityAccesslist"},
	{mount: "auth/aws", path: "identity-accesslist/{instance_id}"}:                     {name: "AWSIdentityAccesslistFor"},
	{mount: "auth/aws", path: "identity-whitelist"}:                                    {name: "AWSIdentityWhitelist"},
	{mount: "auth/aws", path: "identity-whitelist/{instance_id}"}:                      {name: "AWSIdentityWhitelistFor"},
	{mount: "auth/aws", path: "login"}:                                                 {name: "AWSLogin", operationImplied: true},
	{mount: "auth/aws", path: "role"}:                                                  {name: "AWSAuthRoles"},
	{mount: "auth/aws", path: "role/{role}"}:                                           {name: "AWSAuthRole"},
	{mount: "auth/aws", path: "role/{role}/tag"}:                                       {name: "AWSAuthRoleTag"},
	{mount: "auth/aws", path: "roles"}:                                                 {name: "AWSAuthRoles2"},
	{mount: "auth/aws", path: "roletag-blacklist"}:                                     {name: "AWSRoleTagBlacklist"},
	{mount: "auth/aws", path: "roletag-blacklist/{role_tag}"}:                          {name: "AWSRoleTagBlacklistFor"},
	{mount: "auth/aws", path: "roletag-denylist"}:                                      {name: "AWSRoleTagDenylist"},
	{mount: "auth/aws", path: "roletag-denylist/{role_tag}"}:                           {name: "AWSRoleTagDenylistFor"},
	{mount: "auth/aws", path: "tidy/identity-accesslist"}:                              {name: "AWSTidyIdentityAccesslist"},
	{mount: "auth/aws", path: "tidy/identity-whitelist"}:                               {name: "AWSTidyIdentityWhitelist"},
	{mount: "auth/aws", path: "tidy/roletag-blacklist"}:                                {name: "AWSTidyRoleTagBlacklist"},
	{mount: "auth/aws", path: "tidy/roletag-denylist"}:                                 {name: "AWSTidyRoleTagDenylist"},
	{mount: "auth/azure", path: "config"}:                                              {name: "AzureConfig"},
	{mount: "auth/azure", path: "login"}:                                               {name: "AzureLogin", operationImplied: true},
	{mount: "auth/azure", path: "role"}:                                                {name: "AzureRoles"},
	{mount: "auth/azure", path: "role/{name}"}:                                         {name: "AzureRole"},
	{mount: "auth/centrify", path: "config"}:                                           {name: "CentrifyConfig"},
	{mount: "auth/centrify", path: "login"}:                                            {name: "CentrifyLogin", operationImplied: true},
	{mount: "auth/cert", path: "certs"}:                                                {name: "Certificates"},
	{mount: "auth/cert", path: "certs/{name}"}:                                         {name: "Certificate"},
	{mount: "auth/cert", path: "config"}:                                               {name: "CertificateConfig"},
	{mount: "auth/cert", path: "crls"}:                                                 {name: "CertificateCRLs"},
	{mount: "auth/cert", path: "crls/{name}"}:                                          {name: "CertificateCRL"},
	{mount: "auth/cert", path: "login"}:                                                {name: "CertificateLogin", operationImplied: true},
	{mount: "auth/cf", path: "config"}:                                                 {name: "CloudFoundryConfig"},
	{mount: "auth/cf", path: "login"}:                                                  {name: "CloudFoundryLogin", operationImplied: true},
	{mount: "auth/cf", path: "roles"}:                                                  {name: "CloudFoundryRoles"},
	{mount: "auth/cf", path: "roles/{role}"}:                                           {name: "CloudFoundryRole"},
	{mount: "auth/gcp", path: "config"}:                                                {name: "GoogleCloudConfig"},
	{mount: "auth/gcp", path: "login"}:                                                 {name: "GoogleCloudLogin", operationImplied: true},
	{mount: "auth/gcp", path: "role"}:                                                  {name: "GoogleCloudRoles"},
	{mount: "auth/gcp", path: "role/{name}"}:                                           {name: "GoogleCloudRole"},
	{mount: "auth/gcp", path: "role/{name}/labels"}:                                    {name: "GoogleCloudRoleLabels"},
	{mount: "auth/gcp", path: "role/{name}/service-accounts"}:                          {name: "GoogleCloudRoleServiceAccounts"},
	{mount: "auth/gcp", path: "roles"}:                                                 {name: "GoogleCloudRoles2"},
	{mount: "auth/github", path: "config"}:                                             {name: "GitHubConfig"},
	{mount: "auth/github", path: "login"}:                                              {name: "GitHubLogin", operationImplied: true},
	{mount: "auth/github", path: "map/teams"}:                                          {name: "GitHubMapTeams"},
	{mount: "auth/github", path: "map/teams/{key}"}:                                    {name: "GitHubMapTeam"},
	{mount: "auth/github", path: "map/users"}:                                          {name: "GitHubMapUsers"},
	{mount: "auth/github", path: "map/users/{key}"}:                                    {name: "GitHubMapUser"},
	{mount: "auth/jwt", path: "config"}:                                                {name: "JWTConfig"},
	{mount: "auth/jwt", path: "login"}:                                                 {name: "JWTLogin", operationImplied: true},
	{mount: "auth/jwt", path: "oidc/auth_url"}:                                         {name: "JWTOIDCAuthURL"},
	{mount: "auth/jwt", path: "oidc/callback"}:                                         {name: "JWTOIDCCallback"},
	{mount: "auth/jwt", path: "role"}:                                                  {name: "JWTRoles"},
	{mount: "auth/jwt", path: "role/{name}"}:                                           {name: "JWTRole"},
	{mount: "auth/kerberos", path: "config"}:                                           {name: "KerberosConfig"},
	{mount: "auth/kerberos", path: "config/ldap"}:                                      {name: "KerberosConfigLDAP"},
	{mount: "auth/kerberos", path: "groups"}:                                           {name: "KerberosGroups"},
	{mount: "auth/kerberos", path: "groups/{name}"}:                                    {name: "KerberosGroup"},
	{mount: "auth/kerberos", path: "login"}:                                            {name: "KerberosLogin", operationImplied: true},
	{mount: "auth/kubernetes", path: "config"}:                                         {name: "KubernetesConfig"},
	{mount: "auth/kubernetes", path: "login"}:                                          {name: "KubernetesLogin", operationImplied: true},
	{mount: "auth/kubernetes", path: "role"}:                                           {name: "KubernetesRoles"},
	{mount: "auth/kubernetes", path: "role/{name}"}:                                    {name: "KubernetesRole"},
	{mount: "auth/ldap", path: "config"}:                                               {name: "LDAPConfig"},
	{mount: "auth/ldap", path: "groups"}:                                               {name: "LDAPGroups"},
	{mount: "auth/ldap", path: "groups/{name}"}:                                        {name: "LDAPGroup"},
	{mount: "auth/ldap", path: "login/{username}"}:                                     {name: "LDAPLogin", operationImplied: true},
	{mount: "auth/ldap", path: "users"}:                                                {name: "LDAPUsers"},
	{mount: "auth/ldap", path: "users/{name}"}:                                         {name: "LDAPUser"},
	{mount: "auth/oci", path: "config"}:                                                {name: "OCIConfig"},
	{mount: "auth/oci", path: "login"}:                                                 {name: "OCILogin", operationImplied: true},
	{mount: "auth/oci", path: "login/{role}"}:                                          {name: "OCILoginWithRole", operationImplied: true},
	{mount: "auth/oci", path: "role"}:                                                  {name: "OCIRoles"},
	{mount: "auth/oci", path: "role/{role}"}:                                           {name: "OCIRole"},
	{mount: "auth/oidc", path: "config"}:                                               {name: "OIDCConfig"},
	{mount: "auth/oidc", path: "login"}:                                                {name: "OIDCLogin", operationImplied: true},
	{mount: "auth/oidc", path: "oidc/auth_url"}:                                        {name: "OIDCAuthURL"},
	{mount: "auth/oidc", path: "oidc/callback"}:                                        {name: "OIDCCallback"},
	{mount: "auth/oidc", path: "role"}:                                                 {name: "OIDCRoles"},
	{mount: "auth/oidc", path: "role/{name}"}:                                          {name: "OIDCRole"},
	{mount: "auth/okta", path: "config"}:                                               {name: "OktaConfig"},
	{mount: "auth/okta", path: "groups"}:                                               {name: "OktaGroups"},
	{mount: "auth/okta", path: "groups/{name}"}:                                        {name: "OktaGroup"},
	{mount: "auth/okta", path: "login/{username}"}:                                     {name: "OktaLogin", operationImplied: true},
	{mount: "auth/okta", path: "users"}:                                                {name: "OktaUsers"},
	{mount: "auth/okta", path: "users/{name}"}:                                         {name: "OktaUser"},
	{mount: "auth/okta", path: "verify/{nonce}"}:                                       {name: "OktaVerify"},
	{mount: "auth/radius", path: "config"}:                                             {name: "RadiusConfig"},
	{mount: "auth/radius", path: "login"}:                                              {name: "RadiusLogin", operationImplied: true},
	{mount: "auth/radius", path: "login/{urlusername}"}:                                {name: "RadiusLoginWithUsername", operationImplied: true},
	{mount: "auth/radius", path: "users"}:                                              {name: "RadiusUsers"},
	{mount: "auth/radius", path: "users/{name}"}:                                       {name: "RadiusUser"},
	{mount: "auth/token", path: "accessors/"}:                                          {name: "TokenAccessors"},
	{mount: "auth/token", path: "create"}:                                              {name: "TokenCreate"},
	{mount: "auth/token", path: "create-orphan"}:                                       {name: "TokenCreateOrphan"},
	{mount: "auth/token", path: "create/{role_name}"}:                                  {name: "TokenCreateWithRole"},
	{mount: "auth/token", path: "lookup"}:                                              {name: "TokenLookup"},
	{mount: "auth/token", path: "lookup-accessor"}:                                     {name: "TokenLookupAccessor"},
	{mount: "auth/token", path: "lookup-self"}:                                         {name: "TokenLookupSelf"},
	{mount: "auth/token", path: "renew"}:                                               {name: "TokenRenew"},
	{mount: "auth/token", path: "renew-accessor"}:                                      {name: "TokenRenewAccessor"},
	{mount: "auth/token", path: "renew-self"}:                                          {name: "TokenRenewSelf"},
	{mount: "auth/token", path: "revoke"}:                                              {name: "TokenRevoke"},
	{mount: "auth/token", path: "revoke-accessor"}:                                     {name: "TokenRevokeAccessor"},
	{mount: "auth/token", path: "revoke-orphan"}:                                       {name: "TokenRevokeOrphan"},
	{mount: "auth/token", path: "revoke-self"}:                                         {name: "TokenRevokeSelf"},
	{mount: "auth/token", path: "roles"}:                                               {name: "TokenRoles"},
	{mount: "auth/token", path: "roles/{role_name}"}:                                   {name: "TokenRole"},
	{mount: "auth/token", path: "tidy"}:                                                {name: "TokenTidy"},
	{mount: "auth/userpass", path: "login/{username}"}:                                 {name: "UserpassLogin", operationImplied: true},
	{mount: "auth/userpass", path: "users"}:                                            {name: "UserpassUsers"},
	{mount: "auth/userpass", path: "users/{username}"}:                                 {name: "UserpassUser"},
	{mount: "auth/userpass", path: "users/{username}/password"}:                        {name: "UserpassUserPassword"},
	{mount: "auth/userpass", path: "users/{username}/policies"}:                        {name: "UserpassUserPolicies"},
	{mount: "ad", path: "config"}:                                                      {name: "ActiveDirectoryConfig"},
	{mount: "ad", path: "creds/{name}"}:                                                {name: "ActiveDirectoryCredentials"},
	{mount: "ad", path: "library"}:                                                     {name: "ActiveDirectoryLibraries"},
	{mount: "ad", path: "library/manage/{name}/check-in"}:                              {name: "ActiveDirectoryLibraryManageCheckIn"},
	{mount: "ad", path: "library/{name}"}:                                              {name: "ActiveDirectoryLibrary"},
	{mount: "ad", path: "library/{name}/check-in"}:                                     {name: "ActiveDirectoryLibraryCheckIn"},
	{mount: "ad", path: "library/{name}/check-out"}:                                    {name: "ActiveDirectoryLibraryCheckOut"},
	{mount: "ad", path: "library/{name}/status"}:                                       {name: "ActiveDirectoryLibraryStatus"},
	{mount: "ad", path: "roles"}:                                                       {name: "ActiveDirectoryRoles"},
	{mount: "ad", path: "roles/{name}"}:                                                {name: "ActiveDirectoryRole"},
	{mount: "ad", path: "rotate-role/{name}"}:                                          {name: "ActiveDirectoryRotateRole"},
	{mount: "ad", path: "rotate-root"}:                                                 {name: "ActiveDirectoryRotateRoot"},
	{mount: "alicloud", path: "config"}:                                                {name: "AliCloudConfig"},
	{mount: "alicloud", path: "creds/{name}"}:                                          {name: "AliCloudCredentials"},
	{mount: "alicloud", path: "role"}:                                                  {name: "AliCloudRoles"},
	{mount: "alicloud", path: "role/{name}"}:                                           {name: "AliCloudRole"},
	{mount: "aws", path: "config/lease"}:                                               {name: "AWSConfigLease"},
	{mount: "aws", path: "config/root"}:                                                {name: "AWSConfigRoot"},
	{mount: "aws", path: "config/rotate-root"}:                                         {name: "AWSConfigRotateRoot"},
	{mount: "aws", path: "creds"}:                                                      {name: "AWSCredentials"},
	{mount: "aws", path: "roles"}:                                                      {name: "AWSRoles"},
	{mount: "aws", path: "roles/{name}"}:                                               {name: "AWSRole"},
	{mount: "aws", path: "sts/{name}"}:                                                 {name: "AWSSecurityTokenService"},
	{mount: "azure", path: "config"}:                                                   {name: "AzureConfig"},
	{mount: "azure", path: "creds/{role}"}:                                             {name: "AzureCredentials"},
	{mount: "azure", path: "roles"}:                                                    {name: "AzureRoles"},
	{mount: "azure", path: "roles/{name}"}:                                             {name: "AzureRole"},
	{mount: "azure", path: "rotate-root"}:                                              {name: "AzureRotateRoot"},
	{mount: "consul", path: "config/access"}:                                           {name: "ConsulConfigAccess"},
	{mount: "consul", path: "creds/{role}"}:                                            {name: "ConsulCredentials"},
	{mount: "consul", path: "roles"}:                                                   {name: "ConsulRoles"},
	{mount: "consul", path: "roles/{name}"}:                                            {name: "ConsulRole"},
	{mount: "cubbyhole", path: "{path}"}:                                               {name: "Cubbyhole"},
	{mount: "gcp", path: "config"}:                                                     {name: "GoogleCloudConfig"},
	{mount: "gcp", path: "config/rotate-root"}:                                         {name: "GoogleCloudConfigRotateRoot"},
	{mount: "gcp", path: "key/{roleset}"}:                                              {name: "GoogleCloudKey"},
	{mount: "gcp", path: "roleset/{name}"}:                                             {name: "GoogleCloudRoleset"},
	{mount: "gcp", path: "roleset/{name}/rotate"}:                                      {name: "GoogleCloudRolesetRotate"},
	{mount: "gcp", path: "roleset/{name}/rotate-key"}:                                  {name: "GoogleCloudRolesetRotateKey"},
	{mount: "gcp", path: "roleset/{roleset}/key"}:                                      {name: "GoogleCloudRolesetKey"},
	{mount: "gcp", path: "roleset/{roleset}/token"}:                                    {name: "GoogleCloudRolesetToken"},
	{mount: "gcp", path: "rolesets"}:                                                   {name: "GoogleCloudRolesets"},
	{mount: "gcp", path: "static-account/{name}"}:                                      {name: "GoogleCloudStaticAccount"},
	{mount: "gcp", path: "static-account/{name}/key"}:                                  {name: "GoogleCloudStaticAccountKey"},
	{mount: "gcp", path: "static-account/{name}/rotate-key"}:                           {name: "GoogleCloudStaticAccountRotateKey"},
	{mount: "gcp", path: "static-account/{name}/token"}:                                {name: "GoogleCloudStaticAccountToken"},
	{mount: "gcp", path: "static-accounts"}:                                            {name: "GoogleCloudStaticAccounts"},
	{mount: "gcp", path: "token/{roleset}"}:                                            {name: "GoogleCloudToken"},
	{mount: "gcpkms", path: "config"}:                                                  {name: "GoogleCloudKMSConfig"},
	{mount: "gcpkms", path: "decrypt/{key}"}:                                           {name: "GoogleCloudKMSDecrypt"},
	{mount: "gcpkms", path: "encrypt/{key}"}:                                           {name: "GoogleCloudKMSEncrypt"},
	{mount: "gcpkms", path: "keys"}:                                                    {name: "GoogleCloudKMSKeys"},
	{mount: "gcpkms", path: "keys/config/{key}"}:                                       {name: "GoogleCloudKMSKeysConfig"},
	{mount: "gcpkms", path: "keys/deregister/{key}"}:                                   {name: "GoogleCloudKMSKeysDeregister"},
	{mount: "gcpkms", path: "keys/register/{key}"}:                                     {name: "GoogleCloudKMSKeysRegister"},
	{mount: "gcpkms", path: "keys/rotate/{key}"}:                                       {name: "GoogleCloudKMSKeysRotate"},
	{mount: "gcpkms", path: "keys/trim/{key}"}:                                         {name: "GoogleCloudKMSKeysTrim"},
	{mount: "gcpkms", path: "keys/{key}"}:                                              {name: "GoogleCloudKMSKey"},
	{mount: "gcpkms", path: "pubkey/{key}"}:                                            {name: "GoogleCloudKMSPubkey"},
	{mount: "gcpkms", path: "reencrypt/{key}"}:                                         {name: "GoogleCloudKMSReencrypt"},
	{mount: "gcpkms", path: "sign/{key}"}:                                              {name: "GoogleCloudKMSSign"},
	{mount: "gcpkms", path: "verify/{key}"}:                                            {name: "GoogleCloudKMSVerify"},
	{mount: "identity", path: "alias"}:                                                 {name: "IdentityAlias"},
	{mount: "identity", path: "alias/id"}:                                              {name: "IdentityAliasesByID"},
	{mount: "identity", path: "alias/id/{id}"}:                                         {name: "IdentityAliasByID"},
	{mount: "identity", path: "entity"}:                                                {name: "IdentityEntity"},
	{mount: "identity", path: "entity-alias"}:                                          {name: "IdentityEntityAlias"},
	{mount: "identity", path: "entity-alias/id"}:                                       {name: "IdentityEntityAliasesByID"},
	{mount: "identity", path: "entity-alias/id/{id}"}:                                  {name: "IdentityEntityAliasByID"},
	{mount: "identity", path: "entity/batch-delete"}:                                   {name: "IdentityEntityBatchDelete"},
	{mount: "identity", path: "entity/id"}:                                             {name: "IdentityEntitiesByID"},
	{mount: "identity", path: "entity/id/{id}"}:                                        {name: "IdentityEntityByID"},
	{mount: "identity", path: "entity/merge"}:                                          {name: "IdentityEntityMerge"},
	{mount: "identity", path: "entity/name"}:                                           {name: "IdentityEntitiesByName"},
	{mount: "identity", path: "entity/name/{name}"}:                                    {name: "IdentityEntityByName"},
	{mount: "identity", path: "group"}:                                                 {name: "IdentityGroup"},
	{mount: "identity", path: "group-alias"}:                                           {name: "IdentityGroupAlias"},
	{mount: "identity", path: "group-alias/id"}:                                        {name: "IdentityGroupAliasesByID"},
	{mount: "identity", path: "group-alias/id/{id}"}:                                   {name: "IdentityGroupAliasByID"},
	{mount: "identity", path: "group/id"}:                                              {name: "IdentityGroupsByID"},
	{mount: "identity", path: "group/id/{id}"}:                                         {name: "IdentityGroupByID"},
	{mount: "identity", path: "group/name"}:                                            {name: "IdentityGroupsByName"},
	{mount: "identity", path: "group/name/{name}"}:                                     {name: "IdentityGroupByName"},
	{mount: "identity", path: "lookup/entity"}:                                         {name: "IdentityLookupEntity"},
	{mount: "identity", path: "lookup/group"}:                                          {name: "IdentityLookupGroup"},
	{mount: "identity", path: "mfa/login-enforcement"}:                                 {name: "IdentityMFALoginEnforcements"},
	{mount: "identity", path: "mfa/login-enforcement/{name}"}:                          {name: "IdentityMFALoginEnforcement"},
	{mount: "identity", path: "mfa/method"}:                                            {name: "IdentityMFAMethods"},
	{mount: "identity", path: "mfa/method/duo"}:                                        {name: "IdentityMFAMethodsDuo"},
	{mount: "identity", path: "mfa/method/duo/{method_id}"}:                            {name: "IdentityMFAMethodDuo"},
	{mount: "identity", path: "mfa/method/okta"}:                                       {name: "IdentityMFAMethodsOkta"},
	{mount: "identity", path: "mfa/method/okta/{method_id}"}:                           {name: "IdentityMFAMethodOkta"},
	{mount: "identity", path: "mfa/method/pingid"}:                                     {name: "IdentityMFAMethodsPingID"},
	{mount: "identity", path: "mfa/method/pingid/{method_id}"}:                         {name: "IdentityMFAMethodPingID"},
	{mount: "identity", path: "mfa/method/totp"}:                                       {name: "IdentityMFAMethodsTOTP"},
	{mount: "identity", path: "mfa/method/totp/admin-destroy"}:                         {name: "IdentityMFAMethodTOTPAdminDestroy"},
	{mount: "identity", path: "mfa/method/totp/admin-generate"}:                        {name: "IdentityMFAMethodTOTPAdminGenerate"},
	{mount: "identity", path: "mfa/method/totp/generate"}:                              {name: "IdentityMFAMethodTOTPGenerate"},
	{mount: "identity", path: "mfa/method/totp/{method_id}"}:                           {name: "IdentityMFAMethodTOTP"},
	{mount: "identity", path: "mfa/method/{method_id}"}:                                {name: "IdentityMFAMethod"},
	{mount: "identity", path: "oidc/.well-known/keys"}:                                 {name: "IdentityOIDCWellKnownKeys"},
	{mount: "identity", path: "oidc/.well-known/openid-configuration"}:                 {name: "IdentityOIDCWellKnownOpenIDConfiguration"},
	{mount: "identity", path: "oidc/assignment"}:                                       {name: "IdentityOIDCAssignments"},
	{mount: "identity", path: "oidc/assignment/{name}"}:                                {name: "IdentityOIDCAssignment"},
	{mount: "identity", path: "oidc/client"}:                                           {name: "IdentityOIDCClients"},
	{mount: "identity", path: "oidc/client/{name}"}:                                    {name: "IdentityOIDCClient"},
	{mount: "identity", path: "oidc/config"}:                                           {name: "IdentityOIDCConfig"},
	{mount: "identity", path: "oidc/introspect"}:                                       {name: "IdentityOIDCIntrospect"},
	{mount: "identity", path: "oidc/key"}:                                              {name: "IdentityOIDCKeys"},
	{mount: "identity", path: "oidc/key/{name}"}:                                       {name: "IdentityOIDCKey"},
	{mount: "identity", path: "oidc/key/{name}/rotate"}:                                {name: "IdentityOIDCKeyRotate"},
	{mount: "identity", path: "oidc/provider"}:                                         {name: "IdentityOIDCProviders"},
	{mount: "identity", path: "oidc/provider/{name}"}:                                  {name: "IdentityOIDCProvider"},
	{mount: "identity", path: "oidc/provider/{name}/.well-known/keys"}:                 {name: "IdentityOIDCProviderWellKnownKeys"},
	{mount: "identity", path: "oidc/provider/{name}/.well-known/openid-configuration"}: {name: "IdentityOIDCProviderWellKnownOpenIDConfiguration"},
	{mount: "identity", path: "oidc/provider/{name}/authorize"}:                        {name: "IdentityOIDCProviderAuthorize"},
	{mount: "identity", path: "oidc/provider/{name}/token"}:                            {name: "IdentityOIDCProviderToken"},
	{mount: "identity", path: "oidc/provider/{name}/userinfo"}:                         {name: "IdentityOIDCProviderUserInfo"},
	{mount: "identity", path: "oidc/role"}:                                             {name: "IdentityOIDCRoles"},
	{mount: "identity", path: "oidc/role/{name}"}:                                      {name: "IdentityOIDCRole"},
	{mount: "identity", path: "oidc/scope"}:                                            {name: "IdentityOIDCScopes"},
	{mount: "identity", path: "oidc/scope/{name}"}:                                     {name: "IdentityOIDCScope"},
	{mount: "identity", path: "oidc/token/{name}"}:                                     {name: "IdentityOIDCToken"},
	{mount: "identity", path: "persona"}:                                               {name: "IdentityPersona"},
	{mount: "identity", path: "persona/id"}:                                            {name: "IdentityPersonaIDs"},
	{mount: "identity", path: "persona/id/{id}"}:                                       {name: "IdentityPersonaID"},
	{mount: "kubernetes", path: "config"}:                                              {name: "KubernetesConfig"},
	{mount: "kubernetes", path: "creds/{name}"}:                                        {name: "KubernetesCredentials"},
	{mount: "kubernetes", path: "roles"}:                                               {name: "KubernetesRoles"},
	{mount: "kubernetes", path: "roles/{name}"}:                                        {name: "KubernetesRole"},
	{mount: "kv", path: "{path}"}:                                                      {name: "KVv1Secret"},
	{mount: "ldap", path: "config"}:                                                    {name: "LDAPConfig"},
	{mount: "ldap", path: "creds/{name}"}:                                              {name: "LDAPCredentials"},
	{mount: "ldap", path: "library"}:                                                   {name: "LDAPLibraries"},
	{mount: "ldap", path: "library/manage/{name}/check-in"}:                            {name: "LDAPLibraryManageCheckIn"},
	{mount: "ldap", path: "library/{name}"}:                                            {name: "LDAPLibrary"},
	{mount: "ldap", path: "library/{name}/check-in"}:                                   {name: "LDAPLibraryCheckIn"},
	{mount: "ldap", path: "library/{name}/check-out"}:                                  {name: "LDAPLibraryCheckOut"},
	{mount: "ldap", path: "library/{name}/status"}:                                     {name: "LDAPLibraryStatus"},
	{mount: "ldap", path: "role"}:                                                      {name: "LDAPRoles"},
	{mount: "ldap", path: "role/{name}"}:                                               {name: "LDAPRole"},
	{mount: "ldap", path: "rotate-role/{name}"}:                                        {name: "LDAPRotateRole"},
	{mount: "ldap", path: "rotate-root"}:                                               {name: "LDAPRotateRoot"},
	{mount: "ldap", path: "static-cred/{name}"}:                                        {name: "LDAPStaticCredentials"},
	{mount: "ldap", path: "static-role"}:                                               {name: "LDAPStaticRoles"},
	{mount: "ldap", path: "static-role/{name}"}:                                        {name: "LDAPStaticRole"},
	{mount: "mongodbatlas", path: "config"}:                                            {name: "MongoDBAtlasConfig"},
	{mount: "mongodbatlas", path: "creds/{name}"}:                                      {name: "MongoDBAtlasCredentials"},
	{mount: "mongodbatlas", path: "roles"}:                                             {name: "MongoDBAtlasRoles"},
	{mount: "mongodbatlas", path: "roles/{name}"}:                                      {name: "MongoDBAtlasRole"},
	{mount: "nomad", path: "config/access"}:                                            {name: "NomadConfigAccess"},
	{mount: "nomad", path: "config/lease"}:                                             {name: "NomadConfigLease"},
	{mount: "nomad", path: "creds/{name}"}:                                             {name: "NomadCredentials"},
	{mount: "nomad", path: "role"}:                                                     {name: "NomadRoles"},
	{mount: "nomad", path: "role/{name}"}:                                              {name: "NomadRole"},
	{mount: "openldap", path: "config"}:                                                {name: "OpenLDAPConfig"},
	{mount: "openldap", path: "creds/{name}"}:                                          {name: "OpenLDAPCredentials"},
	{mount: "openldap", path: "library"}:                                               {name: "OpenLDAPLibraries"},
	{mount: "openldap", path: "library/manage/{name}/check-in"}:                        {name: "OpenLDAPLibraryManageCheckIn"},
	{mount: "openldap", path: "library/{name}"}:                                        {name: "OpenLDAPLibrary"},
	{mount: "openldap", path: "library/{name}/check-in"}:                               {name: "OpenLDAPLibraryCheckIn"},
	{mount: "openldap", path: "library/{name}/check-out"}:                              {name: "OpenLDAPLibraryCheckOut"},
	{mount: "openldap", path: "library/{name}/status"}:                                 {name: "OpenLDAPLibraryStatus"},
	{mount: "openldap", path: "role"}:                                                  {name: "OpenLDAPRoles"},
	{mount: "openldap", path: "role/{name}"}:                                           {name: "OpenLDAPRole"},
	{mount: "openldap", path: "rotate-role/{name}"}:                                    {name: "OpenLDAPRotateRole"},
	{mount: "openldap", path: "rotate-root"}:                                           {name: "OpenLDAPRotateRoot"},
	{mount: "openldap", path: "static-cred/{name}"}:                                    {name: "OpenLDAPStaticCredentials"},
	{mount: "openldap", path: "static-role"}:                                           {name: "OpenLDAPStaticRoles"},
	{mount: "openldap", path: "static-role/{name}"}:                                    {name: "OpenLDAPStaticRole"},
	{mount: "pki", path: "bundle"}:                                                     {name: "PKIBundle"},
	{mount: "pki", path: "ca"}:                                                         {name: "PKICA"},
	{mount: "pki", path: "ca/pem"}:                                                     {name: "PKICAPem"},
	{mount: "pki", path: "ca_chain"}:                                                   {name: "PKICaChain"},
	{mount: "pki", path: "cert"}:                                                       {name: "PKICerts"},
	{mount: "pki", path: "cert/ca_chain"}:                                              {name: "PKICertCaChain"},
	{mount: "pki", path: "cert/{serial}"}:                                              {name: "PKICert"},
	{mount: "pki", path: "cert/{serial}/raw"}:                                          {name: "PKICertRaw"},
	{mount: "pki", path: "cert/{serial}/raw/pem"}:                                      {name: "PKICertRawPem"},
	{mount: "pki", path: "certs"}:                                                      {name: "PKICerts"},
	{mount: "pki", path: "certs/revoked"}:                                              {name: "PKICertsRevoked"},
	{mount: "pki", path: "config/auto-tidy"}:                                           {name: "PKIConfigAutoTidy"},
	{mount: "pki", path: "config/ca"}:                                                  {name: "PKIConfigCa"},
	{mount: "pki", path: "config/cluster"}:                                             {name: "PKIConfigCluster"},
	{mount: "pki", path: "config/crl"}:                                                 {name: "PKIConfigCRL"},
	{mount: "pki", path: "config/issuers"}:                                             {name: "PKIConfigIssuers"},
	{mount: "pki", path: "config/keys"}:                                                {name: "PKIConfigKeys"},
	{mount: "pki", path: "config/urls"}:                                                {name: "PKIConfigURLs"},
	{mount: "pki", path: "crl"}:                                                        {name: "PKICRL"},
	{mount: "pki", path: "crl/rotate"}:                                                 {name: "PKICRLRotate"},
	{mount: "pki", path: "crl/rotate-delta"}:                                           {name: "PKICRLRotateDelta"},
	{mount: "pki", path: "delta-crl"}:                                                  {name: "PKIDeltaCRL"},
	{mount: "pki", path: "intermediate/cross-sign"}:                                    {name: "PKIIntermediateCrossSign"},
	{mount: "pki", path: "intermediate/generate/{exported}"}:                           {name: "PKIIntermediateGenerate"},
	{mount: "pki", path: "intermediate/set-signed"}:                                    {name: "PKIIntermediateSetSigned"},
	{mount: "pki", path: "internal|exported"}:                                          {name: "PKIInternalExported"},
	{mount: "pki", path: "issue/{role}"}:                                               {name: "PKIIssueRole"},
	{mount: "pki", path: "issuer/{issuer_ref}/issue/{role}"}:                           {name: "PKIIssuerIssueRole"},
	{mount: "pki", path: "issuer/{issuer_ref}/resign-crls"}:                            {name: "PKIIssuerResignCRLs"},
	{mount: "pki", path: "issuer/{issuer_ref}/revoke"}:                                 {name: "PKIIssuerRevoke"},
	{mount: "pki", path: "issuer/{issuer_ref}/sign-intermediate"}:                      {name: "PKIIssuerSignIntermediate"},
	{mount: "pki", path: "issuer/{issuer_ref}/sign-revocation-list"}:                   {name: "PKIIssuerSignRevocationList"},
	{mount: "pki", path: "issuer/{issuer_ref}/sign-self-issued"}:                       {name: "PKIIssuerSignSelfIssued"},
	{mount: "pki", path: "issuer/{issuer_ref}/sign-verbatim"}:                          {name: "PKIIssuerSignVerbatim"},
	{mount: "pki", path: "issuer/{issuer_ref}/sign-verbatim/{role}"}:                   {name: "PKIIssuerSignVerbatimRole"},
	{mount: "pki", path: "issuer/{issuer_ref}/sign/{role}"}:                            {name: "PKIIssuerSignRole"},
	{mount: "pki", path: "issuers"}:                                                    {name: "PKIIssuers"},
	{mount: "pki", path: "issuers/generate/intermediate/{exported}"}:                   {name: "PKIIssuersGenerateIntermediateExported"},
	{mount: "pki", path: "issuers/generate/root/{exported}"}:                           {name: "PKIIssuersGenerateRootExported"},
	{mount: "pki", path: "key/{key_ref}"}:                                              {name: "PKIKey"},
	{mount: "pki", path: "keys"}:                                                       {name: "PKIKeys"},
	{mount: "pki", path: "keys/import"}:                                                {name: "PKIKeysImport"},
	{mount: "pki", path: "kms"}:                                                        {name: "PKIKMS"},
	{mount: "pki", path: "ocsp"}:                                                       {name: "PKIOCSP"},
	{mount: "pki", path: "ocsp/{req}"}:                                                 {name: "PKIOCSPReq"},
	{mount: "pki", path: "revoke"}:                                                     {name: "PKIRevoke"},
	{mount: "pki", path: "revoke-with-key"}:                                            {name: "PKIRevokeWithKey"},
	{mount: "pki", path: "roles"}:                                                      {name: "PKIRoles"},
	{mount: "pki", path: "roles/{name}"}:                                               {name: "PKIRole"},
	{mount: "pki", path: "root"}:                                                       {name: "PKIRoot"},
	{mount: "pki", path: "root/generate/{exported}"}:                                   {name: "PKIRootGenerate"},
	{mount: "pki", path: "root/replace"}:                                               {name: "PKIRootReplace"},
	{mount: "pki", path: "root/rotate/{exported}"}:                                     {name: "PKIRootRotate"},
	{mount: "pki", path: "root/sign-intermediate"}:                                     {name: "PKIRootSignIntermediate"},
	{mount: "pki", path: "root/sign-self-issued"}:                                      {name: "PKIRootSignSelfIssued"},
	{mount: "pki", path: "sign-verbatim"}:                                              {name: "PKISignVerbatim"},
	{mount: "pki", path: "sign-verbatim/{role}"}:                                       {name: "PKISignVerbatimRole"},
	{mount: "pki", path: "sign/{role}"}:                                                {name: "PKISignRole"},
	{mount: "pki", path: "tidy"}:                                                       {name: "PKITidy"},
	{mount: "pki", path: "tidy-cancel"}:                                                {name: "PKITidyCancel"},
	{mount: "pki", path: "tidy-status"}:                                                {name: "PKITidyStatus"},
	{mount: "rabbitmq", path: "config/connection"}:                                     {name: "RabbitMQConfigConnection"},
	{mount: "rabbitmq", path: "config/lease"}:                                          {name: "RabbitMQConfigLease"},
	{mount: "rabbitmq", path: "creds/{name}"}:                                          {name: "RabbitMQCredentials"},
	{mount: "rabbitmq", path: "roles"}:                                                 {name: "RabbitMQRoles"},
	{mount: "rabbitmq", path: "roles/{name}"}:                                          {name: "RabbitMQRole"},
	{mount: "secret", path: "config"}:                                                  {name: "SecretConfig"},
	{mount: "secret", path: "data/{path}"}:                                             {name: "Secret"},
	{mount: "secret", path: "delete/{path}"}:                                           {name: "DeleteSecretVersions", operationImplied: true},
	{mount: "secret", path: "destroy/{path}"}:                                          {name: "DestroySecretVersions", operationImplied: true},
	{mount: "secret", path: "metadata/{path}"}:                                         {name: "SecretMetadata"},
	{mount: "secret", path: "subkeys/{path}"}:                                          {name: "SecretSubkeys"},
	{mount: "secret", path: "undelete/{path}"}:                                         {name: "UndeleteSecretVersions", operationImplied: true},
	{mount: "ssh", path: "config/ca"}:                                                  {name: "SSHConfigCA"},
	{mount: "ssh", path: "config/zeroaddress"}:                                         {name: "SSHConfigZeroAddress"},
	{mount: "ssh", path: "creds/{role}"}:                                               {name: "SSHCredentials"},
	{mount: "ssh", path: "issue/{role}"}:                                               {name: "SSHIssue", operationImplied: true},
	{mount: "ssh", path: "keys/{key_name}"}:                                            {name: "SSHKeys"},
	{mount: "ssh", path: "lookup"}:                                                     {name: "SSHLookup", operationImplied: true},
	{mount: "ssh", path: "public_key"}:                                                 {name: "SSHPublicKey"},
	{mount: "ssh", path: "roles"}:                                                      {name: "SSHRoles"},
	{mount: "ssh", path: "roles/{role}"}:                                               {name: "SSHRole"},
	{mount: "ssh", path: "sign/{role}"}:                                                {name: "SSHSign", operationImplied: true},
	{mount: "ssh", path: "verify"}:                                                     {name: "SSHVerify", operationImplied: true},
	{mount: "sys", path: "audit"}:                                                      {name: "AuditDevices"},
	{mount: "sys", path: "audit/{path}"}:                                               {name: "AuditDevicesWith"},
	{mount: "sys", path: "audit-hash/{path}"}:                                          {name: "AuditHash"},
	{mount: "sys", path: "auth"}:                                                       {name: "AuthMethods"},
	{mount: "sys", path: "auth/{path}"}:                                                {name: "AuthMethodsWith"},
	{mount: "sys", path: "auth/{path}/tune"}:                                           {name: "AuthMethodTune"},
	{mount: "sys", path: "capabilities"}:                                               {name: "Capabilities"},
	{mount: "sys", path: "capabilities-accessor"}:                                      {name: "CapabilitiesAccessor"},
	{mount: "sys", path: "capabilities-self"}:                                          {name: "CapabilitiesSelf"},
	{mount: "sys", path: "config/auditing/request-headers"}:                            {name: "ConfigAuditingRequestHeaders"},
	{mount: "sys", path: "config/auditing/request-headers/{header}"}:                   {name: "ConfigAuditingRequestHeader"},
	{mount: "sys", path: "config/cors"}:                                                {name: "ConfigCORS"},
	{mount: "sys", path: "config/reload/{subsystem}"}:                                  {name: "ConfigReloadSubsystem"},
	{mount: "sys", path: "config/state/sanitized"}:                                     {name: "ConfigStateSanitized"},
	{mount: "sys", path: "config/ui/headers/"}:                                         {name: "ConfigUIHeaders"},
	{mount: "sys", path: "config/ui/headers/{header}"}:                                 {name: "ConfigUIHeader"},
	{mount: "sys", path: "generate-root"}:                                              {name: "GenerateRoot"},
	{mount: "sys", path: "generate-root/attempt"}:                                      {name: "GenerateRootAttempt"},
	{mount: "sys", path: "generate-root/update"}:                                       {name: "GenerateRootUpdate"},
	{mount: "sys", path: "ha-status"}:                                                  {name: "HAStatus"},
	{mount: "sys", path: "health"}:                                                     {name: "Health"},
	{mount: "sys", path: "host-info"}:                                                  {name: "HostInfo"},
	{mount: "sys", path: "in-flight-req"}:                                              {name: "InFlightRequests"},
	{mount: "sys", path: "init"}:                                                       {name: "Init", operationImplied: true},
	{mount: "sys", path: "internal/counters/activity"}:                                 {name: "InternalCountersActivity"},
	{mount: "sys", path: "internal/counters/activity/export"}:                          {name: "InternalCountersActivityExport"},
	{mount: "sys", path: "internal/counters/activity/monthly"}:                         {name: "InternalCountersActivityMonthly"},
	{mount: "sys", path: "internal/counters/config"}:                                   {name: "InternalCountersConfig"},
	{mount: "sys", path: "internal/counters/entities"}:                                 {name: "InternalCountersEntities"},
	{mount: "sys", path: "internal/counters/requests"}:                                 {name: "InternalCountersRequests"},
	{mount: "sys", path: "internal/counters/tokens"}:                                   {name: "InternalCountersTokens"},
	{mount: "sys", path: "internal/inspect/router/{tag}"}:                              {name: "InternalInspectRouter"},
	{mount: "sys", path: "internal/specs/openapi"}:                                     {name: "InternalSpecsOpenAPI"},
	{mount: "sys", path: "internal/ui/feature-flags"}:                                  {name: "InternalUIFeatureFlags"},
	{mount: "sys", path: "internal/ui/mounts"}:                                         {name: "InternalUIMounts"},
	{mount: "sys", path: "internal/ui/mounts/{path}"}:                                  {name: "InternalUIMount"},
	{mount: "sys", path: "internal/ui/namespaces"}:                                     {name: "InternalUINamespaces"},
	{mount: "sys", path: "internal/ui/resultant-acl"}:                                  {name: "InternalUIResultantACL"},
	{mount: "sys", path: "key-status"}:                                                 {name: "KeyStatus"},
	{mount: "sys", path: "leader"}:                                                     {name: "Leader"},
	{mount: "sys", path: "leases"}:                                                     {name: "Leases"},
	{mount: "sys", path: "leases/count"}:                                               {name: "LeasesCount"},
	{mount: "sys", path: "leases/lookup"}:                                              {name: "LeasesLookup"},
	{mount: "sys", path: "leases/lookup/{prefix}"}:                                     {name: "LeasesLookupPrefix"},
	{mount: "sys", path: "leases/renew"}:                                               {name: "LeasesRenew"},
	{mount: "sys", path: "leases/renew/{url_lease_id}"}:                                {name: "LeasesRenew2"},
	{mount: "sys", path: "leases/revoke"}:                                              {name: "LeasesRevoke"},
	{mount: "sys", path: "leases/revoke-force/{prefix}"}:                               {name: "LeasesRevokeForce"},
	{mount: "sys", path: "leases/revoke-prefix/{prefix}"}:                              {name: "LeasesRevokePrefix"},
	{mount: "sys", path: "leases/revoke/{url_lease_id}"}:                               {name: "LeasesRevoke2"},
	{mount: "sys", path: "leases/tidy"}:                                                {name: "LeasesTidy"},
	{mount: "sys", path: "loggers"}:                                                    {name: "Loggers"},
	{mount: "sys", path: "loggers/{name}"}:                                             {name: "Logger"},
	{mount: "sys", path: "metrics"}:                                                    {name: "Metrics"},
	{mount: "sys", path: "mfa/validate"}:                                               {name: "MFAValidate"},
	{mount: "sys", path: "monitor"}:                                                    {name: "Monitor", operationImplied: true},
	{mount: "sys", path: "mounts"}:                                                     {name: "Mounts"},
	{mount: "sys", path: "mounts/{path}"}:                                              {name: "MountsWith"},
	{mount: "sys", path: "mounts/{path}/tune"}:                                         {name: "MountsTune"},
	{mount: "sys", path: "plugins/catalog"}:                                            {name: "PluginsCatalog"},
	{mount: "sys", path: "plugins/catalog/{type}"}:                                     {name: "PluginsCatalogByType"},
	{mount: "sys", path: "plugins/catalog/{type}/{name}"}:                              {name: "PluginsCatalogByTypeByName"},
	{mount: "sys", path: "plugins/reload/backend"}:                                     {name: "PluginsReloadBackend"},
	{mount: "sys", path: "policies/acl"}:                                               {name: "PoliciesACL"},
	{mount: "sys", path: "policies/acl/{name}"}:                                        {name: "PoliciesACL"},
	{mount: "sys", path: "policies/password"}:                                          {name: "PoliciesPassword"},
	{mount: "sys", path: "policies/password/{name}"}:                                   {name: "PoliciesPassword"},
	{mount: "sys", path: "policies/password/{name}/generate"}:                          {name: "PoliciesPasswordGenerate"},
	{mount: "sys", path: "policy"}:                                                     {name: "Policies"},
	{mount: "sys", path: "policy/{name}"}:                                              {name: "Policy"},
	{mount: "sys", path: "pprof/"}:                                                     {name: "Pprof"},
	{mount: "sys", path: "pprof/allocs"}:                                               {name: "PprofAllocs"},
	{mount: "sys", path: "pprof/block"}:                                                {name: "PprofBlock"},
	{mount: "sys", path: "pprof/cmdline"}:                                              {name: "PprofCmdline"},
	{mount: "sys", path: "pprof/goroutine"}:                                            {name: "PprofGoroutine"},
	{mount: "sys", path: "pprof/heap"}:                                                 {name: "PprofHeap"},
	{mount: "sys", path: "pprof/mutex"}:                                                {name: "PprofMutex"},
	{mount: "sys", path: "pprof/profile"}:                                              {name: "PprofProfile"},
	{mount: "sys", path: "pprof/symbol"}:                                               {name: "PprofSymbol"},
	{mount: "sys", path: "pprof/threadcreate"}:                                         {name: "PprofThreadcreate"},
	{mount: "sys", path: "pprof/trace"}:                                                {name: "PprofTrace"},
	{mount: "sys", path: "quotas/config"}:                                              {name: "QuotasConfig"},
	{mount: "sys", path: "quotas/rate-limit"}:                                          {name: "QuotasRateLimits"},
	{mount: "sys", path: "quotas/rate-limit/{name}"}:                                   {name: "QuotasRateLimit"},
	{mount: "sys", path: "raw"}:                                                        {name: "Raw"},
	{mount: "sys", path: "raw/{path}"}:                                                 {name: "RawPath"},
	{mount: "sys", path: "rekey/backup"}:                                               {name: "RekeyBackup", operationImplied: true},
	{mount: "sys", path: "rekey/init"}:                                                 {name: "RekeyInit", operationImplied: true},
	{mount: "sys", path: "rekey/recovery-key-backup"}:                                  {name: "RekeyRecoveryKeyBackup", operationImplied: true},
	{mount: "sys", path: "rekey/update"}:                                               {name: "RekeyUpdate", operationImplied: true},
	{mount: "sys", path: "rekey/verify"}:                                               {name: "RekeyVerify", operationImplied: true},
	{mount: "sys", path: "remount"}:                                                    {name: "Remount", operationImplied: true},
	{mount: "sys", path: "remount/status/{migration_id}"}:                              {name: "RemountStatus"},
	{mount: "sys", path: "renew"}:                                                      {name: "Renew", operationImplied: true},
	{mount: "sys", path: "renew/{url_lease_id}"}:                                       {name: "Renew", operationImplied: true},
	{mount: "sys", path: "replication/status"}:                                         {name: "ReplicationStatus"},
	{mount: "sys", path: "revoke"}:                                                     {name: "Revoke", operationImplied: true},
	{mount: "sys", path: "revoke-force/{prefix}"}:                                      {name: "RevokeForce", operationImplied: true},
	{mount: "sys", path: "revoke-prefix/{prefix}"}:                                     {name: "RevokePrefix", operationImplied: true},
	{mount: "sys", path: "revoke/{url_lease_id}"}:                                      {name: "Revoke, operationImplied: true"},
	{mount: "sys", path: "rotate"}:                                                     {name: "Rotate", operationImplied: true},
	{mount: "sys", path: "rotate/config"}:                                              {name: "RotateConfig"},
	{mount: "sys", path: "seal"}:                                                       {name: "Seal", operationImplied: true},
	{mount: "sys", path: "seal-status"}:                                                {name: "SealStatus"},
	{mount: "sys", path: "step-down"}:                                                  {name: "StepDown", operationImplied: true},
	{mount: "sys", path: "tools/hash"}:                                                 {name: "ToolsHashes"},
	{mount: "sys", path: "tools/hash/{urlalgorithm}"}:                                  {name: "ToolsHash"},
	{mount: "sys", path: "tools/random"}:                                               {name: "ToolsRandom"},
	{mount: "sys", path: "tools/random/{source}"}:                                      {name: "ToolsRandomSource"},
	{mount: "sys", path: "tools/random/{source}/{urlbytes}"}:                           {name: "ToolsRandomSourceBytes"},
	{mount: "sys", path: "unseal"}:                                                     {name: "Unseal", operationImplied: true},
	{mount: "sys", path: "version-history/"}:                                           {name: "VersionHistory"},
	{mount: "sys", path: "wrapping/lookup"}:                                            {name: "WrappingLookup", operationImplied: true},
	{mount: "sys", path: "wrapping/rewrap"}:                                            {name: "WrappingRewrap", operationImplied: true},
	{mount: "sys", path: "wrapping/unwrap"}:                                            {name: "WrappingUnwrap", operationImplied: true},
	{mount: "sys", path: "wrapping/wrap"}:                                              {name: "WrappingWrap", operationImplied: true},
	{mount: "terraform", path: "config"}:                                               {name: "TerraformConfig"},
	{mount: "terraform", path: "creds/{name}"}:                                         {name: "TerraformCredentials"},
	{mount: "terraform", path: "role"}:                                                 {name: "TerraformRoles"},
	{mount: "terraform", path: "role/{name}"}:                                          {name: "TerraformRole"},
	{mount: "terraform", path: "rotate-role/{name}"}:                                   {name: "TerraformRotateRole"},
	{mount: "totp", path: "code/{name}"}:                                               {name: "TOTPCode"},
	{mount: "totp", path: "keys"}:                                                      {name: "TOTPKeys"},
	{mount: "totp", path: "keys/{name}"}:                                               {name: "TOTPKey"},
	{mount: "transit", path: "backup/{name}"}:                                          {name: "TransitBackup"},
	{mount: "transit", path: "cache-config"}:                                           {name: "TransitCacheConfig"},
	{mount: "transit", path: "datakey/{plaintext}/{name}"}:                             {name: "TransitDatakey"},
	{mount: "transit", path: "decrypt/{name}"}:                                         {name: "TransitDecrypt"},
	{mount: "transit", path: "encrypt/{name}"}:                                         {name: "TransitEncrypt"},
	{mount: "transit", path: "export/{type}/{name}"}:                                   {name: "TransitExport"},
	{mount: "transit", path: "export/{type}/{name}/{version}"}:                         {name: "TransitExportVersion"},
	{mount: "transit", path: "hash"}:                                                   {name: "TransitHash"},
	{mount: "transit", path: "hash/{urlalgorithm}"}:                                    {name: "TransitHash"},
	{mount: "transit", path: "hmac/{name}"}:                                            {name: "TransitHMAC"},
	{mount: "transit", path: "hmac/{name}/{urlalgorithm}"}:                             {name: "TransitHMACAlgorithm"},
	{mount: "transit", path: "keys"}:                                                   {name: "TransitKeys"},
	{mount: "transit", path: "keys/{name}"}:                                            {name: "TransitKey"},
	{mount: "transit", path: "keys/{name}/config"}:                                     {name: "TransitKeyConfig"},
	{mount: "transit", path: "keys/{name}/import"}:                                     {name: "TransitKeyImport"},
	{mount: "transit", path: "keys/{name}/import_version"}:                             {name: "TransitKeyImportVersion"},
	{mount: "transit", path: "keys/{name}/rotate"}:                                     {name: "TransitKeyRotate"},
	{mount: "transit", path: "keys/{name}/trim"}:                                       {name: "TransitKeyTrim"},
	{mount: "transit", path: "random"}:                                                 {name: "TransitRandom"},
	{mount: "transit", path: "random/{source}"}:                                        {name: "TransitRandomSource"},
	{mount: "transit", path: "random/{source}/{urlbytes}"}:                             {name: "TransitRandomSourceBytes"},
	{mount: "transit", path: "restore"}:                                                {name: "TransitRestore"},
	{mount: "transit", path: "restore/{name}"}:                                         {name: "TransitRestoreKey"},
	{mount: "transit", path: "rewrap/{name}"}:                                          {name: "TransitRewrap"},
	{mount: "transit", path: "sign/{name}"}:                                            {name: "TransitSign"},
	{mount: "transit", path: "sign/{name}/{urlalgorithm}"}:                             {name: "TransitSignAlgorithm"},
	{mount: "transit", path: "verify/{name}"}:                                          {name: "TransitVerify"},
	{mount: "transit", path: "verify/{name}/{urlalgorithm}"}:                           {name: "TransitVerifyAlgorithm"},
	{mount: "transit", path: "wrapping_key"}:                                           {name: "TransitWrappingKey"},
}
